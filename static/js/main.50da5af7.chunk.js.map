{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodColors","GoodsList","_ref","goods","_jsx","children","map","good","className","cn","color","red","blue","green","name","id","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","_jsxs","type","onClick","sort","a","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"8OAQKA,EAAU,SAAVA,GAAU,OAAVA,EAAU,UAAVA,EAAU,cAAVA,EAAU,YAAVA,CAAU,EAAVA,GAAU,IAMFC,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,UAAWC,IAAG,OAAQ,CACpB,YAAaF,EAAKG,QAAUV,EAAWW,IACvC,aAAcJ,EAAKG,QAAUV,EAAWY,KACxC,cAAeL,EAAKG,QAAUV,EAAWa,QACxCR,SAEFE,EAAKO,MARDP,EAAKQ,GASP,KAEJ,ECxBA,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICDMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCnB,EAAKqB,EAAA,GAAEE,EAAQF,EAAA,GAEtB,OACEG,eAAA,OAAKnB,UAAU,MAAKH,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEwB,KAAK,SACL,UAAQ,aACRC,QAAS,WACPb,IAASE,KAAKQ,EAChB,EAAErB,SACH,mBAIDD,cAAA,UACEwB,KAAK,SACL,UAAQ,oBACRC,QAAS,WDlBRb,IACJE,MAAK,SAAAf,GACJ,OAAOA,EAAM2B,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEjB,KAAKmB,cAAcD,EAAElB,KAAK,IAAEoB,MAAM,EAAG,EACrE,ICgBkBhB,KAAKQ,EACnB,EAAErB,SACH,uBAIDD,cAAA,UACEwB,KAAK,SACL,UAAQ,aACRC,QAAS,WDrBRb,IACJE,MAAK,SAAAf,GAAK,OAAIA,EAAMgC,QAAO,SAAC5B,GAAI,MAAoB,QAAfA,EAAKG,KAAe,GAAC,ICqBvCQ,KAAKQ,EACrB,EAAErB,SACH,mBAIDD,cAACH,EAAS,CAACE,MAAOA,MAGxB,EC9CAiC,IAASC,OACPjC,cAACiB,EAAG,IACJiB,SAASC,eAAe,Q","file":"static/js/main.50da5af7.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nenum GoodColors {\n  red = 'red',\n  green = 'green',\n  blue = 'blue',\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={cn('good', {\n          'good--red': good.color === GoodColors.red,\n          'good--blue': good.color === GoodColors.blue,\n          'good--green': good.color === GoodColors.green,\n        })}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return goods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((good) => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          getAll().then(setGoods);\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          get5First().then(setGoods);\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          getRedGoods().then(setGoods);\n        }}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}